import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { QUIZES } from "../data";
import { useLocalStorage } from "../hooks/useLocalStorage";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const [quizes, saveQuiz] = useLocalStorage("quizes", []);
  const { data, isLoading } = trpc.quiz.getAll.useQuery();
  const { mutateAsync } = trpc.quiz.create.useMutation();

  const createNewQuiz = async () => {
    const newQuiz = { ...QUIZES[0], id: quizes.length + 1 };
    await mutateAsync({ title: "" });
    saveQuiz([...quizes, newQuiz]);
  };

  if (isLoading) {
    return <div>Loading...</div>;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c] text-white">
        <button onClick={createNewQuiz}>Create new quiz</button>
        <div className="flex flex-col items-center justify-center">
          {data &&
            data.map((quiz) => (
              <div
                key={quiz.id}
                className="flex flex-col items-center justify-center"
              >
                <h1 className="text-4xl font-bold text-white">{quiz.title}</h1>
                <p className="text-xl text-white">{quiz.description}</p>
                Number of questions: {quiz.questions.length}
                <Link
                  slot="./quiz/[quizId]"
                  href={`./quiz/${quiz.id}`}
                  className="btn-primary btn-link btn"
                >
                  Open
                </Link>
              </div>
            ))}
        </div>
      </main>
    </>
  );
};

export default Home;
