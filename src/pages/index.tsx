import { PlusIcon, TrashIcon } from "@heroicons/react/24/outline";
import type { Quiz } from "@prisma/client";
import { useQueryClient } from "@tanstack/react-query";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const utils = trpc.useContext();

  const { data, isLoading } = trpc.quiz.getAll.useQuery();
  const { mutate: createQuiz } = trpc.quiz.create.useMutation({
    onMutate: (newQuiz) => {
      const oldQuizes = utils.quiz.getAll.getData();
      utils.quiz.getAll.setData(undefined, [...(oldQuizes as any[]), newQuiz]);

      // Return a context object with the snapshotted value
      return [...(oldQuizes as any[]), newQuiz];
    },
  });
  const { mutate: deleteQuiz } = trpc.quiz.deleteOne.useMutation({
    onMutate: (newQuiz) => {
      const oldQuizes = utils.quiz.getAll.getData();
      const updatedQuizes = oldQuizes?.filter((quiz) => quiz.id !== newQuiz.id);
      utils.quiz.getAll.setData(undefined, updatedQuizes);

      // Return a context object with the snapshotted value
      return updatedQuizes;
    },
  });

  const createNewQuiz = async () => {
    createQuiz({
      title: "My new Quiz",
      description: "My new description",
    });
  };

  if (isLoading) {
    return <div>Loading...</div>;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center ">
        <div className="flex flex-wrap items-center justify-center gap-4">
          {data &&
            data.map((quiz) => (
              <div key={quiz.id} className="card w-96 bg-base-100 shadow-xl">
                <div className="card-body">
                  <h2 className="card-title flex justify-between">
                    {quiz.title}
                    <button
                      className="btn-link btn"
                      onClick={() => deleteQuiz({ id: quiz.id })}
                    >
                      <TrashIcon className="h-6 w-6" />
                    </button>
                  </h2>
                  <p>{quiz.description}</p>
                  <div className="card-actions justify-end">
                    <Link
                      slot="./learn/[quizId]"
                      href={`./learn/${quiz.id}`}
                      className="btn-primary btn"
                    >
                      Learn
                    </Link>
                    <Link
                      slot="./quiz/[quizId]"
                      href={`./quiz/${quiz.id}`}
                      className="btn-primary btn"
                    >
                      Edit
                    </Link>
                  </div>
                </div>
              </div>
            ))}
        </div>
        <button
          className="btn-outline btn-primary btn-circle btn my-8"
          onClick={createNewQuiz}
        >
          <PlusIcon className="h-6 w-6" />
        </button>
      </main>
    </>
  );
};

export default Home;
