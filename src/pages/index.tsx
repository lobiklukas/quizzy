import { type NextPage } from "next";
import { signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Dashboard from "../components/Dashboard";
import Modal from "../components/Modal";
import Sidebar from "../components/Sidebar";
import { requireAuth } from "../middleware/requireAuth";
import { useState } from "react";
import {
  Bars3Icon,
  ChevronDownIcon,
  MagnifyingGlassIcon,
  XMarkIcon,
} from "@heroicons/react/24/solid";
import Image from "next/image";
import clsx from "clsx";
import { useAutoAnimate } from "@formkit/auto-animate/react";

const Home: NextPage = () => {
  const { data: session, status } = useSession();
  const [activeTab, setActiveTab] = useState("dashboard");
  const [animationParent] = useAutoAnimate<HTMLDivElement>();

  const [search, setSearch] = useState("");
  const getContent = () => {
    switch (activeTab) {
      case "dashboard":
        return <Dashboard filter={search} />;
      default:
        return <Dashboard />;
    }
  };

  return (
    <>
      <Head>
        <title>Quizzy</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Sidebar activeTab={activeTab}>
        <main ref={animationParent} className="container flex flex-col gap-2">
          <div className="navbar mb-8 flex w-full gap-2 md:gap-4">
            <div className="flex w-full md:gap-2">
              <div>
                <label
                  htmlFor="my-drawer-2"
                  className="btn-ghost drawer-button btn p-2 lg:hidden"
                >
                  <Bars3Icon className="h-6 w-6" />
                </label>
              </div>
              <MagnifyingGlassIcon className="hidden h-6 w-6 md:block" />
              <div className="relative w-full">
                <input
                  value={search}
                  onChange={(e) => setSearch(e.target.value)}
                  type="text"
                  placeholder="Search"
                  className="input-border input w-full"
                />
                <button
                  className={clsx(
                    "btn-ghost btn-circle btn absolute right-0 transition-all duration-200 ease-in-out",
                    search ? "opacity-100" : "opacity-0"
                  )}
                  onClick={() => setSearch("")}
                >
                  <XMarkIcon className="h-6 w-6" />
                </button>
              </div>
            </div>
            <div className="dropdown-end dropdown">
              <label
                tabIndex={0}
                className="btn-ghost btn-circle avatar btn flex w-full flex-nowrap gap-2"
              >
                <div className="w-10 rounded-full">
                  {session?.user?.image && (
                    <Image
                      width={256}
                      height={256}
                      alt="Profile Picture"
                      src={session.user.image}
                    />
                  )}
                </div>
                <span className="hidden whitespace-nowrap md:block">
                  {session?.user?.name || session?.user?.email}
                </span>
                <ChevronDownIcon className="hidden h-6 w-6 md:block" />
              </label>
              <ul
                tabIndex={0}
                className="dropdown-content menu rounded-box menu-compact mt-3 w-52 bg-base-100 p-2 shadow"
              >
                <li>
                  <a className="justify-between">
                    Profile
                    <span className="badge">New</span>
                  </a>
                </li>
                <li>
                  <a>Settings</a>
                </li>
                <li>
                  <a onClick={() => signOut()}>Logout</a>
                </li>
              </ul>
            </div>
          </div>
          {getContent()}
        </main>
      </Sidebar>
      <Modal />
    </>
  );
};

export const getServerSideProps = requireAuth(async () => {
  return {
    props: {},
  };
});

export default Home;
